{"ast":null,"code":"var Web3 = require(\"web3\");\n\nvar web3 = new Web3();\n\nif (window.ethereum) {\n  web3 = new Web3(window.ethereum);\n\n  try {\n    window.ethereum.enable().then(function () {// User has allowed account access to DApp...\n    });\n  } catch (e) {// User has denied account access to DApp...\n  }\n} // Legacy DApp Browsers\nelse if (window.web3) {\n    web3 = new Web3(web3.currentProvider);\n  } // Non-DApp Browsers\n  else {\n      alert(\"You have to install MetaMask !\");\n    }\n\nwindow.ethereum.enable();\nconsole.log(\" typoe of = \", typeof web3);\n\nif (typeof web3 != \"undefined\") {\n  this.web3Provider = web3.currentProvider;\n  window.ethereum.enable();\n} else {\n  this.web3Provider = new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\");\n  window.ethereum.enable();\n}\n\nexport default web3;","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/web3.js"],"names":["Web3","require","web3","window","ethereum","enable","then","e","currentProvider","alert","console","log","web3Provider","providers","HttpProvider"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAIC,IAAI,GAAG,IAAIF,IAAJ,EAAX;;AACA,IAAIG,MAAM,CAACC,QAAX,EAAqB;AACnBF,EAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAP;;AACA,MAAI;AACFD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBC,IAAzB,CAA8B,YAAY,CACxC;AACD,KAFD;AAGD,GAJD,CAIE,OAAOC,CAAP,EAAU,CACV;AACD;AACF,CATD,CAUA;AAVA,KAWK,IAAIJ,MAAM,CAACD,IAAX,EAAiB;AACpBA,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACM,eAAd,CAAP;AACD,GAFI,CAGL;AAHK,OAIA;AACHC,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;;AACDN,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAK,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,OAAOT,IAAnC;;AACA,IAAI,OAAOA,IAAP,IAAe,WAAnB,EAAgC;AAC9B,OAAKU,YAAL,GAAoBV,IAAI,CAACM,eAAzB;AACAL,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,CAHD,MAGO;AACL,OAAKO,YAAL,GAAoB,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAClB,+DADkB,CAApB;AAGAX,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AAED,eAAeH,IAAf","sourcesContent":["const Web3 = require(\"web3\");\nvar web3 = new Web3();\nif (window.ethereum) {\n  web3 = new Web3(window.ethereum);\n  try {\n    window.ethereum.enable().then(function () {\n      // User has allowed account access to DApp...\n    });\n  } catch (e) {\n    // User has denied account access to DApp...\n  }\n}\n// Legacy DApp Browsers\nelse if (window.web3) {\n  web3 = new Web3(web3.currentProvider);\n}\n// Non-DApp Browsers\nelse {\n  alert(\"You have to install MetaMask !\");\n}\nwindow.ethereum.enable();\nconsole.log(\" typoe of = \", typeof web3);\nif (typeof web3 != \"undefined\") {\n  this.web3Provider = web3.currentProvider;\n  window.ethereum.enable();\n} else {\n  this.web3Provider = new Web3.providers.HttpProvider(\n    \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n  );\n  window.ethereum.enable();\n}\n\nexport default web3;\n"]},"metadata":{},"sourceType":"module"}