{"ast":null,"code":"import _regeneratorRuntime from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aman/Desktop/Ethereum-Escrow/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"./web3\";\nimport \"./App.css\"; // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// import TodoList from \"./TodoList\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // const web3 = new Web3(\n                //   \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n                // );\n                console.log(web3);\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n                // this.setState({ todoList });\n                // const taskCount = await todoList.methods.taskCount().call();\n                // this.setState({ taskCount });\n                // for (var i = 1; i <= taskCount; i++) {\n                //   const task = await todoList.methods.tasks(i).call();\n                //   this.setState({\n                //     tasks: [...this.state.tasks, task],\n                //   });\n                // }\n                // this.setState({ loading: false });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      taskCount: 0,\n      tasks: [],\n      loading: true\n    }; // this.createTask = this.createTask.bind(this);\n    // this.toggleCompleted = this.toggleCompleted.bind(this);\n\n    return _this;\n  } // createTask(content) {\n  //   this.setState({ loading: true });\n  //   this.state.todoList.methods\n  //     .createTask(content)\n  //     .send({ from: this.state.account })\n  //     .once(\"receipt\", (receipt) => {\n  //       this.setState({ loading: false });\n  //     });\n  // }\n\n\n  _createClass(App, [{\n    key: \"toggleCompleted\",\n    value: function toggleCompleted(taskId) {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.state.todoList.methods.toggleCompleted(taskId).send({\n        from: this.state.account\n      }).once(\"receipt\", function (receipt) {\n        _this2.setState({\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/free-download\" // target=\"_blank\"\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Dapp University | Todo List\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, this.state.account) // <TodoList\n      //   tasks={this.state.tasks}\n      //   createTask={this.createTask}\n      //   toggleCompleted={this.toggleCompleted}\n      // />\n      ))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/App.js"],"names":["React","Component","Web3","App","loadBlockchainData","console","log","web3","eth","getAccounts","accounts","setState","account","props","state","taskCount","tasks","loading","taskId","todoList","methods","toggleCompleted","send","from","once","receipt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"./web3\";\nimport \"./App.css\";\n// import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// import TodoList from \"./TodoList\";\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    // const web3 = new Web3(\n    //   \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n    // );\n    console.log(web3);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    // this.setState({ todoList });\n    // const taskCount = await todoList.methods.taskCount().call();\n    // this.setState({ taskCount });\n    // for (var i = 1; i <= taskCount; i++) {\n    //   const task = await todoList.methods.tasks(i).call();\n    //   this.setState({\n    //     tasks: [...this.state.tasks, task],\n    //   });\n    // }\n    // this.setState({ loading: false });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      taskCount: 0,\n      tasks: [],\n      loading: true,\n    };\n\n    // this.createTask = this.createTask.bind(this);\n    // this.toggleCompleted = this.toggleCompleted.bind(this);\n  }\n\n  // createTask(content) {\n  //   this.setState({ loading: true });\n  //   this.state.todoList.methods\n  //     .createTask(content)\n  //     .send({ from: this.state.account })\n  //     .once(\"receipt\", (receipt) => {\n  //       this.setState({ loading: false });\n  //     });\n  // }\n\n  toggleCompleted(taskId) {\n    this.setState({ loading: true });\n    this.state.todoList.methods\n      .toggleCompleted(taskId)\n      .send({ from: this.state.account })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/free-download\"\n            // target=\"_blank\"\n          >\n            Dapp University | Todo List\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small>\n                {/* <a className=\"nav-link\" href=\"#\">\n                  <span id=\"account\"></span>\n                </a> */}\n              </small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"col-lg-12 d-flex justify-content-center\"\n            >\n              {this.state.loading ? (\n                <div id=\"loader\" className=\"text-center\">\n                  <p className=\"text-center\">Loading...</p>\n                </div>\n              ) : (\n                <p>{this.state.account}</p>\n                // <TodoList\n                //   tasks={this.state.tasks}\n                //   createTask={this.createTask}\n                //   toggleCompleted={this.toggleCompleted}\n                // />\n              )}\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}