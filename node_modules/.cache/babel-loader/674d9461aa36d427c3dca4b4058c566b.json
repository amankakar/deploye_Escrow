{"ast":null,"code":"import _defineProperty from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aman/Desktop/Ethereum-Escrow/client/src/App.js\";\n// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n// className App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <nav classNameName=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             classNameName=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul classNameName=\"navbar-nav px-3\">\n//             <li classNameName=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a classNameName=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div classNameName=\"container-fluid\">\n//           <div classNameName=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport ipfs from \"./ipfs\";\nimport hbl_contract from \"./hbl_market\";\nimport React, { Component, useState } from \"react\";\nimport { Link } from \"react-router\";\nimport Home from \"./components/createPurchase\";\nimport CreatePurchase from \"./components/createPurchase\";\nimport ViewPurchase from \"./components/viewPurchase\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nvar infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // componentWillMount() {\n    //   this.loadBlockchainData();\n    // }\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     accounts: [],\n    //     loading: true,\n    //     selectedFile: null,\n    //     ipfsHash: null,\n    //     buffer: null,\n    //     productId: \"\",\n    //     productName: \"\",\n    //     web3: \"\",\n    //     contractAddress: \"\",\n    //   };\n    //   this.onFileChange = this.onFileChange.bind(this);\n    //   this.onFileUpload = this.onFileUpload.bind(this);\n    //   this.onProductId = this.onProductId.bind(this);\n    //   this.onProductName = this.onProductName.bind(this);\n    // }\n    // async loadBlockchainData() {\n    //   let web3;\n    //   if (window.ethereum) {\n    //     web3 = new Web3(window.ethereum);\n    //     try {\n    //       window.ethereum.enable().then(function () {\n    //         // User has allowed account access to DApp...\n    //         web3 = new Web3(\n    //           Web3.givenProvider ||\n    //             \"wss://ropsten.infura.io/ws/v3/43cda5da85674a7a88c5e531e2a09a76\"\n    //         );\n    //       });\n    //     } catch (e) {\n    //       // User has denied account access to DApp...\n    //     }\n    //   }\n    //   // Legacy DApp Browsers\n    //   else if (window.web3) {\n    //     web3 = new Web3(window.web3.currentProvider);\n    //   }\n    //   // Non-DApp Browsers\n    //   else {\n    //     alert(\"You have to install MetaMask !\");\n    //   }\n    //   this.setState({ web3: web3 });\n    //   let accounts = await web3.eth.getAccounts();\n    //   this.setState({ accounts: accounts });\n    // }\n    // onFileChange = async (event) => {\n    //   // Update the state\n    //   // event.preventDefault();\n    //   this.setState({ selectedFile: await event.target.files[0] });\n    //   console.log(this.state.selectedFile);\n    // };\n    // onProductId = async (event) => {\n    //   this.setState({ productId: event.target.value });\n    // };\n    // onProductName = async (event) => {\n    //   this.setState({ productName: event.target.value });\n    // };\n    // onFileUpload = async (event) => {\n    //   this.setState({ loading: false });\n    //   const file_data = this.state.selectedFile;\n    //   console.log(file_data);\n    //   const reader = new window.FileReader();\n    //   reader.readAsArrayBuffer(file_data);\n    //   reader.onloadend = async () => {\n    //     this.setState({ buffer: await Buffer(reader.result) });\n    //     console.log(\"buffer:\", this.state.buffer);\n    //   };\n    //   await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n    //     if (err) {\n    //       console.log(\"Error::\", err);\n    //     } else {\n    //       console.log(ipfsHash);\n    //     }\n    //     //setState by setting ipfsHash to ipfsHash[0].hash\n    //     this.setState({ ipfsHash: ipfsHash[0].hash });\n    //     console.log(this.state.ipfsHash);\n    //     this.setState({ loading: false });\n    //   });\n    // };\n    // onSubmit = async (event) => {\n    //   event.preventDefault();\n    //   const web3 = this.state.web3;\n    //   // console.log(accounts);\n    //   console.log(this.state.productId, this.state.productName);\n    //   const bytes32Key = web3.utils.fromAscii(this.state.productId);\n    //   console.log(bytes32Key);\n    //   const wei = web3.utils.toWei(\"0.0004\", \"Ether\");\n    //   console.log(hbl_contract.methods);\n    //   hbl_contract.methods\n    //     .createPurchaseContract(\n    //       bytes32Key,\n    //       this.state.productName,\n    //       this.state.ipfsHash\n    //     )\n    //     .send({\n    //       from: this.state.accounts[0],\n    //       value: wei,\n    //     });\n    // };\n    // // getContract = async () => {\n    // //   let address = await hbl_contract.methods\n    // //     .getContractKeyAtIndex(1)\n    // //     .call({ from: this.state.accounts[0] });\n    // //   console.log(address);\n    // // };\n    // getContract = async () => {\n    //   const bytes32Key = this.state.web3.utils.fromAscii(this.state.productId);\n    //   let address = await hbl_contract.methods\n    //     .widgets(bytes32Key)\n    //     .call({ from: this.state.accounts[0] });\n    //   this.setState({ contractAddress: address });\n    //   console.log(address);\n    //   // console.log(SafePurchase(address));\n    //   // this.purchaseContract(address);\n    // };\n    // purchaseContract = async (address) => {\n    //   const web3 = this.state.web3;\n    //   let contract = await SafePurchase(address);\n    //   let price = await contract.methods.price().call({\n    //     from: this.state.accounts[0],\n    //   });\n    //   let price_ether = web3.utils.fromWei(price, \"Ether\");\n    //   console.log(price_ether);\n    // };\n    value: function render() {\n      var _React$createElement;\n\n      return (\n        /*#__PURE__*/\n        // <div className=\"App\" className=\"container-fluid\">\n        //   <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        //     <a\n        //       className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n        //       href=\"http://www.dappuniversity.com/free-download\"\n        //     >\n        //       Escrow Payment | Ethereum % IPFS\n        //     </a>\n        //     <ul className=\"navbar-nav\">\n        //       <li className=\"nav-item\">\n        //         {this.props.children}\n        //         <Link className=\"nav-link\" to={\"\"}>\n        //           View Purchase Contract\n        //         </Link>\n        //       </li>\n        //     </ul>\n        //   </nav>\n        //   <br></br>\n        //   <br></br>\n        //   <div>\n        //   </div>\n        // </div>\n        // </div>\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Navbar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", (_React$createElement = {\n          className: \"App\"\n        }, _defineProperty(_React$createElement, \"className\", \"container-fluid\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }), _React$createElement), /*#__PURE__*/React.createElement(Home, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 11\n          }\n        })))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/App.js"],"names":["ipfs","hbl_contract","React","Component","useState","Link","Home","CreatePurchase","ViewPurchase","Navbar","infuraProjectId","App"],"mappingsiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,IAAMC,eAAe,GAAG,kCAAxB;;IACMC,G;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;6BAES;AAAA;;AACP;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAGE;AAAK,UAAA,SAAS,EAAC;AAAf,8DAA+B,iBAA/B;AAAA;AAAA;AAAA;AAAA,gDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF;AAzBF;AAiCD;;;;EA3KeR,S;;AA6KlB,eAAeQ,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n\n// className App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <nav classNameName=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             classNameName=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul classNameName=\"navbar-nav px-3\">\n//             <li classNameName=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a classNameName=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div classNameName=\"container-fluid\">\n//           <div classNameName=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nimport ipfs from \"./ipfs\";\nimport hbl_contract from \"./hbl_market\";\nimport React, { Component, useState } from \"react\";\nimport { Link } from \"react-router\";\nimport Home from \"./components/createPurchase\";\nimport CreatePurchase from \"./components/createPurchase\";\nimport ViewPurchase from \"./components/viewPurchase\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\nclass App extends Component {\n  // componentWillMount() {\n  //   this.loadBlockchainData();\n  // }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     accounts: [],\n  //     loading: true,\n  //     selectedFile: null,\n  //     ipfsHash: null,\n  //     buffer: null,\n  //     productId: \"\",\n  //     productName: \"\",\n  //     web3: \"\",\n  //     contractAddress: \"\",\n  //   };\n  //   this.onFileChange = this.onFileChange.bind(this);\n  //   this.onFileUpload = this.onFileUpload.bind(this);\n  //   this.onProductId = this.onProductId.bind(this);\n  //   this.onProductName = this.onProductName.bind(this);\n  // }\n  // async loadBlockchainData() {\n  //   let web3;\n  //   if (window.ethereum) {\n  //     web3 = new Web3(window.ethereum);\n  //     try {\n  //       window.ethereum.enable().then(function () {\n  //         // User has allowed account access to DApp...\n  //         web3 = new Web3(\n  //           Web3.givenProvider ||\n  //             \"wss://ropsten.infura.io/ws/v3/43cda5da85674a7a88c5e531e2a09a76\"\n  //         );\n  //       });\n  //     } catch (e) {\n  //       // User has denied account access to DApp...\n  //     }\n  //   }\n  //   // Legacy DApp Browsers\n  //   else if (window.web3) {\n  //     web3 = new Web3(window.web3.currentProvider);\n  //   }\n  //   // Non-DApp Browsers\n  //   else {\n  //     alert(\"You have to install MetaMask !\");\n  //   }\n  //   this.setState({ web3: web3 });\n  //   let accounts = await web3.eth.getAccounts();\n  //   this.setState({ accounts: accounts });\n  // }\n  // onFileChange = async (event) => {\n  //   // Update the state\n  //   // event.preventDefault();\n  //   this.setState({ selectedFile: await event.target.files[0] });\n  //   console.log(this.state.selectedFile);\n  // };\n  // onProductId = async (event) => {\n  //   this.setState({ productId: event.target.value });\n  // };\n  // onProductName = async (event) => {\n  //   this.setState({ productName: event.target.value });\n  // };\n  // onFileUpload = async (event) => {\n  //   this.setState({ loading: false });\n  //   const file_data = this.state.selectedFile;\n  //   console.log(file_data);\n  //   const reader = new window.FileReader();\n  //   reader.readAsArrayBuffer(file_data);\n  //   reader.onloadend = async () => {\n  //     this.setState({ buffer: await Buffer(reader.result) });\n  //     console.log(\"buffer:\", this.state.buffer);\n  //   };\n\n  //   await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n  //     if (err) {\n  //       console.log(\"Error::\", err);\n  //     } else {\n  //       console.log(ipfsHash);\n  //     }\n\n  //     //setState by setting ipfsHash to ipfsHash[0].hash\n  //     this.setState({ ipfsHash: ipfsHash[0].hash });\n  //     console.log(this.state.ipfsHash);\n  //     this.setState({ loading: false });\n  //   });\n  // };\n\n  // onSubmit = async (event) => {\n  //   event.preventDefault();\n  //   const web3 = this.state.web3;\n  //   // console.log(accounts);\n  //   console.log(this.state.productId, this.state.productName);\n  //   const bytes32Key = web3.utils.fromAscii(this.state.productId);\n  //   console.log(bytes32Key);\n  //   const wei = web3.utils.toWei(\"0.0004\", \"Ether\");\n\n  //   console.log(hbl_contract.methods);\n  //   hbl_contract.methods\n  //     .createPurchaseContract(\n  //       bytes32Key,\n  //       this.state.productName,\n  //       this.state.ipfsHash\n  //     )\n  //     .send({\n  //       from: this.state.accounts[0],\n  //       value: wei,\n  //     });\n  // };\n  // // getContract = async () => {\n  // //   let address = await hbl_contract.methods\n  // //     .getContractKeyAtIndex(1)\n  // //     .call({ from: this.state.accounts[0] });\n  // //   console.log(address);\n  // // };\n  // getContract = async () => {\n  //   const bytes32Key = this.state.web3.utils.fromAscii(this.state.productId);\n\n  //   let address = await hbl_contract.methods\n  //     .widgets(bytes32Key)\n  //     .call({ from: this.state.accounts[0] });\n  //   this.setState({ contractAddress: address });\n  //   console.log(address);\n  //   // console.log(SafePurchase(address));\n  //   // this.purchaseContract(address);\n  // };\n\n  // purchaseContract = async (address) => {\n  //   const web3 = this.state.web3;\n  //   let contract = await SafePurchase(address);\n  //   let price = await contract.methods.price().call({\n  //     from: this.state.accounts[0],\n  //   });\n  //   let price_ether = web3.utils.fromWei(price, \"Ether\");\n\n  //   console.log(price_ether);\n  // };\n\n  render() {\n    return (\n      // <div className=\"App\" className=\"container-fluid\">\n      //   <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      //     <a\n      //       className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n      //       href=\"http://www.dappuniversity.com/free-download\"\n      //     >\n      //       Escrow Payment | Ethereum % IPFS\n      //     </a>\n      //     <ul className=\"navbar-nav\">\n      //       <li className=\"nav-item\">\n      //         {this.props.children}\n      //         <Link className=\"nav-link\" to={\"\"}>\n      //           View Purchase Contract\n      //         </Link>\n      //       </li>\n      //     </ul>\n      //   </nav>\n      //   <br></br>\n      //   <br></br>\n      //   <div>\n      //   </div>\n      // </div>\n      // </div>\n\n      <div>\n        <Navbar />\n\n        <div className=\"App\" className=\"container-fluid\">\n          <Home />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}