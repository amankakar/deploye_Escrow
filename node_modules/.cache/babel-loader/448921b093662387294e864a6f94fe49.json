{"ast":null,"code":"var _jsxFileName = \"/home/aman/Desktop/Ethereum-Escrow/client/src/web3.js\";\nimport React from \"react\";\nexport default function Web3Data(props) {\n  var web3Context = props.web3Context;\n  var networkId = web3Context.networkId,\n      networkName = web3Context.networkName,\n      providerName = web3Context.providerName;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \" \", props.title, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Network: \", networkId ? \"\".concat(networkId, \" \\u2013 \").concat(networkName) : \"No connection\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Provider: \", providerName));\n}","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/web3.js"],"names":["React","Web3Data","props","web3Context","networkId","networkName","providerName","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MAC9BC,WAD8B,GACdD,KADc,CAC9BC,WAD8B;AAAA,MAE9BC,SAF8B,GAEWD,WAFX,CAE9BC,SAF8B;AAAA,MAEnBC,WAFmB,GAEWF,WAFX,CAEnBE,WAFmB;AAAA,MAENC,YAFM,GAEWH,WAFX,CAENG,YAFM;AAGtC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMJ,KAAK,CAACK,KAAZ,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYH,SAAS,aAAMA,SAAN,qBAAqBC,WAArB,IAAqC,eAD1D,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBC,YAAhB,CALF,CADF;AASD","sourcesContent":["import React from \"react\";\nexport default function Web3Data(props) {\n  const { web3Context } = props;\n  const { networkId, networkName, providerName } = web3Context;\n  return (\n    <div>\n      <h3> {props.title} </h3>\n      <div>\n        Network: {networkId ? `${networkId} â€“ ${networkName}` : \"No connection\"}\n      </div>\n      <div>Provider: {providerName}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}