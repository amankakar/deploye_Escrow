{"ast":null,"code":"import _defineProperty from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aman/Desktop/Ethereum-Escrow/client/src/App.js\";\n// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n// className App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <nav classNameName=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             classNameName=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul classNameName=\"navbar-nav px-3\">\n//             <li classNameName=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a classNameName=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div classNameName=\"container-fluid\">\n//           <div classNameName=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport { useWeb3 } from \"@openzeppelin/network/react\";\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport { TODO_LIST_ABI } from \"./contracts/hblMarket.json\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\nimport ipfs from \"./ipfs\";\nvar CONTRACT_ADDRESS = \"0x249Ea4c4cbF74E51309bF15c9b4fF120cf550d6B\";\nvar infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onFileChange = function (event) {\n      // Update the state\n      _this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    _this.onFileUpload = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var formData, reader;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Create an object of formData\n                formData = new FormData(); // Update the formData object\n\n                formData.append(\"myFile\", _this.state.selectedFile, _this.state.selectedFile.name); // Details of the uploaded file\n\n                console.log(_this.state.selectedFile); // Request made to the backend api\n                // Send formData object\n\n                axios.post(\"../public\", formData);\n                reader = new window.FileReader();\n                reader.readAsArrayBuffer(_this.state.selectedFile);\n\n                reader.onloadend = function () {\n                  return _this.convertToBuffer(reader);\n                };\n\n                console.log(reader);\n                _context.next = 10;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash); //setState by setting ipfsHash to ipfsHash[0].hash\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  });\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.convertToBuffer = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //file is converted to a buffer for upload to IPFS\n                console.log(\"Reader result:\", reader);\n                _context2.next = 3;\n                return Buffer.from(reader.result);\n\n              case 3:\n                buffer = _context2.sent;\n\n                //set this buffer -using es6 syntax\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.fileData = function () {\n      if (_this.state.selectedFile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }\n        }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }\n        }, \"File Name: \", _this.state.selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }\n        }, \"File Type: \", _this.state.selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }\n        }, \"Last Modified:\", \" \", _this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 11\n          }\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n\n    _this.onSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash); //setState by setting ipfsHash to ipfsHash[0].hash\n\n                  _this.setState({\n                    ipfsHash: ipfsHash[0].hash\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      account: \"\",\n      taskCount: 0,\n      tasks: [],\n      loading: true,\n      selectedFile: null,\n      ipfsHash: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider || \"wss://ropsten.infura.io/ws/v3/43cda5da85674a7a88c5e531e2a09a76\");\n                _context4.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context4.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return /*#__PURE__*/React.createElement(\"div\", (_React$createElement = {\n        className: \"App\"\n      }, _defineProperty(_React$createElement, \"className\", \"container-fluid\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }), _React$createElement), /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/free-download\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, \"Escrow Payment | Ethereum % IPFS\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }\n      })))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }\n      }, \" Product Details \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control\",\n        type: \"text\",\n        placeholder: \"Product ID\",\n        id: \"product_id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control \",\n        type: \"text\",\n        placeholder: \"Product Name\",\n        id: \"product_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control\",\n        type: \"text\",\n        placeholder: \"IPFS_Hash\",\n        id: \"ipfs_hash\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        class: \"form-control\",\n        type: \"file\",\n        placeholder: \"File\",\n        name: \"file\",\n        onChange: this.onFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary justify-content-center\",\n        onClick: this.onFileUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 19\n        }\n      }, \"Upload file\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }, \" \", this.state.selectedFile ? this.fileData() : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      }, \"Sign in\"), \" \", \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, \" \", \"Get Transaction Receipt\")))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/App.js"],"names":["React","Component","useState","useWeb3","Web3","getWeb3","TODO_LIST_ABI","axios","ipfs","CONTRACT_ADDRESS","infuraProjectId","App","loadBlockchainData","props","onFileChange","event","setState","selectedFile","target","files","onFileUpload","formData","FormData","append","state","name","console","log","post","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","add","buffer","err","ipfsHash","hash","Buffer","from","result","fileData","type","lastModifiedDate","toDateString","onSubmit","account","taskCount","tasks","loading","web3","givenProvider","eth","getAccounts","accounts","onClick"],"mappingsgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,gBAAgB,GAAG,4CAAzB;AAEA,IAAMC,eAAe,GAAG,kCAAxB;;IACMC,G;;;;;yCACiB;AACnB,WAAKC,kBAAL;AACD;;;AACD,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAmBnBC,YAnBmB,GAmBJ,UAACC,KAAD,EAAW;AACxB;AACA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAtBkB;;AAAA,UAwBnBC,YAxBmB;AAAA,0EAwBJ,iBAAOL,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACb;AACMM,gBAAAA,QAFO,GAEI,IAAIC,QAAJ,EAFJ,EAIb;;AACAD,gBAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,MAAKC,KAAL,CAAWP,YAFb,EAGE,MAAKO,KAAL,CAAWP,YAAX,CAAwBQ,IAH1B,EALa,CAWb;;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWP,YAAvB,EAZa,CAcb;AACA;;AACAV,gBAAAA,KAAK,CAACqB,IAAN,CAAW,WAAX,EAAwBP,QAAxB;AACIQ,gBAAAA,MAjBS,GAiBA,IAAIC,MAAM,CAACC,UAAX,EAjBA;AAkBbF,gBAAAA,MAAM,CAACG,iBAAP,CAAyB,MAAKR,KAAL,CAAWP,YAApC;;AACAY,gBAAAA,MAAM,CAACI,SAAP,GAAmB;AAAA,yBAAM,MAAKC,eAAL,CAAqBL,MAArB,CAAN;AAAA,iBAAnB;;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AApBa;AAAA,uBAqBPrB,IAAI,CAAC2B,GAAL,CAAS,MAAKX,KAAL,CAAWY,MAApB,EAA4B,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACnDZ,kBAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAAiBC,QAAjB,EADmD,CAEnD;;AACA,wBAAKtB,QAAL,CAAc;AAAEsB,oBAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD,CAAR,CAAYC;AAAxB,mBAAd;AACD,iBAJK,CArBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxBI;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAmDnBL,eAnDmB;AAAA,2EAmDD,kBAAOL,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,MAA9B;AAFgB;AAAA,uBAGKW,MAAM,CAACC,IAAP,CAAYZ,MAAM,CAACa,MAAnB,CAHL;;AAAA;AAGVN,gBAAAA,MAHU;;AAIhB;AACA,sBAAKpB,QAAL,CAAc;AAAEoB,kBAAAA,MAAM,EAANA;AAAF,iBAAd;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAnDC;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA0DnBO,QA1DmB,GA0DR,YAAM;AACf,UAAI,MAAKnB,KAAL,CAAWP,YAAf,EAA6B;AAC3B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKO,KAAL,CAAWP,YAAX,CAAwBQ,IAAvC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKD,KAAL,CAAWP,YAAX,CAAwB2B,IAAvC,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACiB,GADjB,EAEG,MAAKpB,KAAL,CAAWP,YAAX,CAAwB4B,gBAAxB,CAAyCC,YAAzC,EAFH,CAJF,CADF;AAWD,OAZD,MAYO;AACL,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CADF;AAMD;AACF,KA/EkB;;AAAA,UAsFnBC,QAtFmB;AAAA,2EAsFR,kBAAOhC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACHP,IAAI,CAAC2B,GAAL,CAAS,MAAKX,KAAL,CAAWY,MAApB,EAA4B,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACnDZ,kBAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ,EAAiBC,QAAjB,EADmD,CAEnD;;AACA,wBAAKtB,QAAL,CAAc;AAAEsB,oBAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD,CAAR,CAAYC;AAAxB,mBAAd;AACD,iBAJK,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtFQ;;AAAA;AAAA;AAAA;AAAA;;AAEjB,UAAKf,KAAL,GAAa;AACXwB,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,CAFA;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAE,IAJE;AAKXlC,MAAAA,YAAY,EAAE,IALH;AAMXqB,MAAAA,QAAQ,EAAE;AANC,KAAb;AAFiB;AAUlB;;;;;;;;;;;AAEKc,gBAAAA,I,GAAO,IAAIhD,IAAJ,CACTA,IAAI,CAACiD,aAAL,IACE,gEAFO,C;;uBAIUD,IAAI,CAACE,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACJ,qBAAKxC,QAAL,CAAc;AAAEgC,kBAAAA,OAAO,EAAEQ,QAAQ,CAAC,CAAD;AAAnB,iBAAd;;;;;;;;;;;;;;;;;;6BA4EO;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,4DAA+B,iBAA/B;AAAA;AAAA;AAAA;AAAA,8CACE;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,qCADZ;AAEE,QAAA,IAAI,EAAC,6CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,eAOE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAwB,QAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF,CAPF,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,QAAQ,EAAE,KAAKT,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,YAHd;AAIE,QAAA,EAAE,EAAC,YAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,EAAE,EAAC,cAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,eAiBE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,EAAE,EAAC,WAJL;AAKE,QAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,eA2BE;AAAU,QAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAE,KAAKjC,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,eAUE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,wCAFZ;AAGE,QAAA,OAAO,EAAE,KAAKM,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVF,CADF,CA3BF,eA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,KAAKI,KAAL,CAAWP,YAAX,GAA0B,KAAK0B,QAAL,EAA1B,GAA4C,EAAnD,CA/CF,eAiDE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGY,GAHZ,2BAKE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKc,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,GALH,4BALF,CADF,CAjDF,CADF,CAFF,CApBF,CADF;AA8FD;;;;EAhMexD,S;;AAkMlB,eAAeU,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n\n// className App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <nav classNameName=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             classNameName=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul classNameName=\"navbar-nav px-3\">\n//             <li classNameName=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a classNameName=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div classNameName=\"container-fluid\">\n//           <div classNameName=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nimport React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport { useWeb3 } from \"@openzeppelin/network/react\";\nimport Web3 from \"web3\";\nimport getWeb3 from \"./getWeb3\";\nimport { TODO_LIST_ABI } from \"./contracts/hblMarket.json\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\nimport ipfs from \"./ipfs\";\n\nconst CONTRACT_ADDRESS = \"0x249Ea4c4cbF74E51309bF15c9b4fF120cf550d6B\";\n\nconst infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      taskCount: 0,\n      tasks: [],\n      loading: true,\n      selectedFile: null,\n      ipfsHash: null,\n    };\n  }\n  async loadBlockchainData() {\n    let web3 = new Web3(\n      Web3.givenProvider ||\n        \"wss://ropsten.infura.io/ws/v3/43cda5da85674a7a88c5e531e2a09a76\"\n    );\n    let accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n  }\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  onFileUpload = async (event) => {\n    // Create an object of formData\n    const formData = new FormData();\n\n    // Update the formData object\n    formData.append(\n      \"myFile\",\n      this.state.selectedFile,\n      this.state.selectedFile.name\n    );\n\n    // Details of the uploaded file\n    console.log(this.state.selectedFile);\n\n    // Request made to the backend api\n    // Send formData object\n    axios.post(\"../public\", formData);\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(this.state.selectedFile);\n    reader.onloadend = () => this.convertToBuffer(reader);\n    console.log(reader);\n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n      console.log(err, ipfsHash);\n      //setState by setting ipfsHash to ipfsHash[0].hash\n      this.setState({ ipfsHash: ipfsHash[0].hash });\n    });\n  };\n  convertToBuffer = async (reader) => {\n    //file is converted to a buffer for upload to IPFS\n    console.log(\"Reader result:\", reader);\n    const buffer = await Buffer.from(reader.result);\n    //set this buffer -using es6 syntax\n    this.setState({ buffer });\n  };\n  fileData = () => {\n    if (this.state.selectedFile) {\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified:{\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  };\n  // const web3 = await getWeb3.eth();\n  // console.log(web3);\n  // const web3Context = useWeb3(\n  //   `wss://ropsten.infura.io/ws/v3/${infuraProjectId}`\n  // );\n\n  onSubmit = async (event) => {\n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n      console.log(err, ipfsHash);\n      //setState by setting ipfsHash to ipfsHash[0].hash\n      this.setState({ ipfsHash: ipfsHash[0].hash });\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\" className=\"container-fluid\">\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/free-download\"\n          >\n            Escrow Payment | Ethereum % IPFS\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small>\n                <a className=\"nav-link\" href=\"#\">\n                  <span id=\"account\"></span>\n                </a>\n              </small>\n            </li>\n          </ul>\n        </nav>\n        <br></br>\n        <br></br>\n        <div>\n          <h3 className=\"text-center\"> Product Details </h3>\n          <div className=\"row justify-content-center\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group row\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Product ID\"\n                  id=\"product_id\"\n                />\n              </div>\n              <div className=\"form-group row\">\n                <input\n                  class=\"form-control \"\n                  type=\"text\"\n                  placeholder=\"Product Name\"\n                  id=\"product_name\"\n                />\n              </div>\n              <div className=\"form-group row\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"IPFS_Hash\"\n                  id=\"ipfs_hash\"\n                  disabled\n                />\n              </div>\n\n              <fieldset className=\"form-group\">\n                <div className=\"form-group row\">\n                  <input\n                    class=\"form-control\"\n                    type=\"file\"\n                    placeholder=\"File\"\n                    name=\"file\"\n                    onChange={this.onFileChange}\n                  />\n                  <br></br>\n                  <br></br>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary justify-content-center\"\n                    onClick={this.onFileUpload}\n                  >\n                    Upload file\n                  </button>\n                </div>\n              </fieldset>\n              <div> {this.state.selectedFile ? this.fileData() : \"\"}</div>\n\n              <div className=\"form-group row\">\n                <div className=\"col-sm-10\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Sign in\n                  </button>{\" \"}\n                  &nbsp;&nbsp;\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={this.onClick}\n                  >\n                    {\" \"}\n                    Get Transaction Receipt\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}