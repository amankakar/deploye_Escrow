{"ast":null,"code":"import _regeneratorRuntime from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aman/Desktop/Ethereum-Escrow/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/aman/Desktop/Ethereum-Escrow/client/src/App.js\";\n// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n// class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul className=\"navbar-nav px-3\">\n//             <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a className=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div className=\"container-fluid\">\n//           <div className=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React from \"react\";\nimport \"./App.css\";\nimport { useWeb3 } from \"@openzeppelin/network/react\";\nimport Web3Data from \"./web3.js\";\nimport web3 from \"./getWeb3\";\nimport { TODO_LIST_ABI } from \"./contracts/hblMarket.json\";\nvar CONTRACT_ADDRESS = \"0x249Ea4c4cbF74E51309bF15c9b4fF120cf550d6B\";\nvar infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\n\nfunction App() {\n  return _App.apply(this, arguments);\n}\n\nfunction _App() {\n  _App = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var web3;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log(await Web3);\n            web3 = wweb3.eth.getAccounts(); // const web3Context = useWeb3(\n            //   `wss://ropsten.infura.io/ws/v3/${infuraProjectId}`\n            // );\n\n            return _context.abrupt(\"return\", /*#__PURE__*/React.createElement(\"div\", {\n              className: \"App\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 5\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 7\n              }\n            })));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _App.apply(this, arguments);\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aman/Desktop/Ethereum-Escrow/client/src/App.js"],"names":["React","useWeb3","Web3Data","web3","TODO_LIST_ABI","CONTRACT_ADDRESS","infuraProjectId","App","wweb3","eth","getAccounts"],"mappingskB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,IAAMC,gBAAgB,GAAG,4CAAzB;AAEA,IAAMC,eAAe,GAAG,kCAAxB;;SACeC,G;;;;;kEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACMJ,YAAAA,IAFR,GAEeK,KAAK,CAACC,GAAN,CAAUC,WAAV,EAFf,EAGE;AACA;AACA;;AALF,0DAOI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,eAAeH,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import Web3 from \"web3\";\n// import \"./App.css\";\n// // import { TODO_LIST_ABI, TODO_LIST_ADDRESS } from \"./config\";\n// // import TodoList from \"./TodoList\";\n\n// class App extends Component {\n//   componentWillMount() {\n//     this.loadBlockchainData();\n//   }\n\n//   async loadBlockchainData() {\n//     let web3;\n//     // web3 = new Web3(\n//     //   new Web3.providers.HttpProvider(\n//     //     \"https://ropsten.infura.io/v3/43cda5da85674a7a88c5e531e2a09a76\"\n//     //   )\n//     // );\n//     if (window.ethereum) {\n//       web3 = new Web3(window.ethereum);\n//       try {\n//         window.ethereum.enable().then(function () {\n//           // User has allowed account access to DApp...\n//         });\n//       } catch (e) {\n//         // User has denied account access to DApp...\n//       }\n//     }\n//     // Legacy DApp Browsers\n//     else if (window.web3) {\n//       web3 = new Web3(window.web3.currentProvider);\n//     }\n//     // Non-DApp Browsers\n//     else {\n//       alert(\"You have to install MetaMask !\");\n//     }\n//     // const web3 = new Web3(Web3.givenProvider);\n//     // console.log(accounts1);\n//     // if (Web3.ethEnabled()) {\n//     //   console.log(\"here\");\n//     // }\n//     console.log(web3);\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"accounts\", accounts);\n//     this.setState({ account: accounts[0] });\n//     // const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n//     // this.setState({ todoList });\n//     // const taskCount = await todoList.methods.taskCount().call();\n//     // this.setState({ taskCount });\n//     // for (var i = 1; i <= taskCount; i++) {\n//     //   const task = await todoList.methods.tasks(i).call();\n//     //   this.setState({\n//     //     tasks: [...this.state.tasks, task],\n//     //   });\n//     // }\n//     // this.setState({ loading: false });\n//   }\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       account: \"\",\n//       taskCount: 0,\n//       tasks: [],\n//       loading: true,\n//     };\n\n//     // this.createTask = this.createTask.bind(this);\n//     // this.toggleCompleted = this.toggleCompleted.bind(this);\n//   }\n\n//   // createTask(content) {\n//   //   this.setState({ loading: true });\n//   //   this.state.todoList.methods\n//   //     .createTask(content)\n//   //     .send({ from: this.state.account })\n//   //     .once(\"receipt\", (receipt) => {\n//   //       this.setState({ loading: false });\n//   //     });\n//   // }\n\n//   toggleCompleted(taskId) {\n//     this.setState({ loading: true });\n//     this.state.todoList.methods\n//       .toggleCompleted(taskId)\n//       .send({ from: this.state.account })\n//       .once(\"receipt\", (receipt) => {\n//         this.setState({ loading: false });\n//       });\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n//           <a\n//             className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n//             href=\"http://www.dappuniversity.com/free-download\"\n//             // target=\"_blank\"\n//           >\n//             Dapp University | Todo List\n//           </a>\n//           <ul className=\"navbar-nav px-3\">\n//             <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n//               <small>\n//                 {/* <a className=\"nav-link\" href=\"#\">\n//                   <span id=\"account\"></span>\n//                 </a> */}\n//               </small>\n//             </li>\n//           </ul>\n//         </nav>\n//         <div className=\"container-fluid\">\n//           <div className=\"row\">\n//             <main\n//               role=\"main\"\n//               className=\"col-lg-12 d-flex justify-content-center\"\n//             >\n//               {this.state.loading ? (\n//                 <div id=\"loader\" className=\"text-center\">\n//                   <p className=\"text-center\">Loading...</p>\n//                 </div>\n//               ) : (\n//                 <p>{this.state.account}</p>\n//                 // <TodoList\n//                 //   tasks={this.state.tasks}\n//                 //   createTask={this.createTask}\n//                 //   toggleCompleted={this.toggleCompleted}\n//                 // />\n//               )}\n//             </main>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nimport React from \"react\";\nimport \"./App.css\";\nimport { useWeb3 } from \"@openzeppelin/network/react\";\nimport Web3Data from \"./web3.js\";\nimport web3 from \"./getWeb3\";\nimport { TODO_LIST_ABI } from \"./contracts/hblMarket.json\";\nconst CONTRACT_ADDRESS = \"0x249Ea4c4cbF74E51309bF15c9b4fF120cf550d6B\";\n\nconst infuraProjectId = \"43cda5da85674a7a88c5e531e2a09a76\";\nasync function App() {\n  // console.log(await Web3);\n  const web3 = wweb3.eth.getAccounts();\n  // const web3Context = useWeb3(\n  //   `wss://ropsten.infura.io/ws/v3/${infuraProjectId}`\n  // );\n  return (\n    <div className=\"App\">\n      <div>\n        {/* <Web3Data title=\"Web3 Data\" web3Context={web3Context} /> */}\n        {/* {console.log(Web3Data)} */}\n      </div>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}